<script type="text/javascript">
    // fix https://github.com/alpinejs/alpine/discussions/1705
    // <!-- âœ… After -->
    document.addEventListener('alpine:init', () => {
        // Will be executed before initializing Alpine.
        Alpine.data("toolConvert", (e) => ({
            mode: 0,
            data: null,
            algo: '',
            loading: false,
            message: '',
            extra: e || {},
            /**
             *
             * @param {string} proxyCallback
             */
            convert(proxyCallback) {
                console.log(e, this.extra);
                if (this.loading) {
                    return;
                }
                /** @type {HTMLFormElement} */
                var form = this.$refs.form;
                if (!form.reportValidity()) {
                    return ;
                }
                this.loading = true;
                if (proxyCallback && typeof proxyCallback === 'string' && window[proxyCallback]) {
                    window[proxyCallback].apply(this);
                    this.loading = false;
                    return ;
                }
                window.fetch('/tool/convert', {
                    method: 'POST',
                    body: new FormData(this.$refs.form),
                }).then((response) => {
                    this.loading = false;
                    response.json().then((body) => {
                        this.data = body.data || body.message;
                    }).catch((err) => {
                        console.log(err);
                    });
                }).catch((err) => {
                    this.loading = false;
                    console.log(err);
                })
            },
            randomIV() {
                var formData = new FormData();
                formData.append('algo', this.$refs.form.algo.value);
                this.$refs.form.iv_base64.checked = true;
                window.fetch('/tool/random_iv', {
                    method: 'POST',
                    body: formData,
                }).then((response) => {
                    response.json().then((body) => {
                        this.$refs.form.iv.value = body.data;
                    }).catch((err) => {
                        console.log(err);
                    });
                }).catch((err) => {
                    console.log(err);
                });
            }
        }));
    });
</script>
